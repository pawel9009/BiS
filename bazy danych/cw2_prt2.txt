CREATE TABLE REGIONS(region_id INT PRIMARY KEY NOT NULL,
                            region_name VARCHAR(140));

CREATE TABLE COUNTRIES(country_id INT PRIMARY KEY NOT NULL,
                            country_name VARCHAR(50),                
                            region_id INT,
                            FOREIGN KEY (region_id) REFERENCES REGIONS(region_id)
                            ON DELETE CASCADE);

CREATE TABLE LOCATIONS(location_id INT PRIMARY KEY NOT NULL,
                            street_adress VARCHAR(50),
                            postal_code VARCHAR(12),
                            city VARCHAR(50),
                            state_province varchar(50),
                            country_id INT,
                            FOREIGN KEY (country_id) REFERENCES COUNTRIES(country_id)
                            ON DELETE CASCADE);

CREATE TABLE DEPARTMENTS(department_Id INT PRIMARY KEY NOT NULL,
                            department_name VARCHAR(50),
                            manager_id INT,
                            location_id INT,
                            FOREIGN KEY (location_id) REFERENCES LOCATIONS(location_id)
                            ON DELETE CASCADE);
                  
CREATE TABLE JOBS(jobs_Id INT PRIMARY KEY NOT NULL,
                            job_title varchar(100),
                            min_salary INT,
                            max_salary INT);
                            
CREATE TABLE EMPLOYEES(employee_id INT PRIMARY KEY NOT NULL,
                            first_name VARCHAR(50),
                            last_name VARCHAR(50),
                            email VARCHAR(100),
                            phone_number VARCHAR(15),
                            hire_date DATE,
                            job_id INT,
                            salary INT,
                            commission_pct VARCHAR(100),
                            manager_id INT,
                            department_id INT,
                            FOREIGN KEY (job_id) REFERENCES JOBS(jobs_Id)
                            ON DELETE CASCADE,
                            FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_Id)
                            ON DELETE CASCADE
                           );
                       

CREATE TABLE JOB_HISTORY(employee_Id INT PRIMARY KEY NOT NULL,
                            start_date DATE,
                            end_date DATE,
                            job_id INT,
                            department_id INT,
                            FOREIGN KEY (job_id) REFERENCES JOBS(jobs_Id)
                            ON DELETE CASCADE,
                            FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_Id)
                            ON DELETE CASCADE,
                            FOREIGN KEY (employee_Id) REFERENCES EMPLOYEES(employee_id)
                            ON DELETE CASCADE);


                            


ALTER TABLE EMPLOYEES ADD FOREIGN KEY (manager_id) REFERENCES EMPLOYEES(employee_id);

ALTER TABLE JOBS
ADD CONSTRAINT check_salary CHECK (max_salary >= min_salary+2000);


CREATE TABLE COUNTRIES AS( SELECT * FROM HR.countries);

CREATE TABLE REGIONS AS( SELECT * FROM HR.regions);

CREATE TABLE LOCATIONS AS( SELECT * FROM HR.locations);

CREATE TABLE DEPARTMENTS AS( SELECT * FROM HR.departments);

CREATE TABLE JOBS AS( SELECT * FROM HR.jobs);

CREATE TABLE EMPLOYEES AS( SELECT * FROM HR.employees);

CREATE TABLE JOB_HISTORY AS( SELECT * FROM HR.job_history);


ALTER TABLE REGIONS
ADD PRIMARY KEY (REGION_ID);

ALTER TABLE COUNTRIES
ADD PRIMARY KEY (COUNTRY_ID)
ADD FOREIGN KEY (REGION_ID)
REFERENCES REGIONS(REGION_ID) ON DELETE CASCADE;

ALTER TABLE LOCATIONS
ADD PRIMARY KEY (LOCATION_ID)
ADD FOREIGN KEY (COUNTRY_ID)
REFERENCES COUNTRIES(COUNTRY_ID) ON DELETE CASCADE;

ALTER TABLE JOBS
ADD PRIMARY KEY (JOB_ID);

ALTER TABLE DEPARTMENTS
ADD PRIMARY KEY (DEPARTMENT_ID)
ADD FOREIGN KEY (LOCATION_ID)
REFERENCES LOCATIONS(LOCATION_ID) ON DELETE CASCADE;

ALTER TABLE EMPLOYEES
ADD PRIMARY KEY (EMPLOYEE_ID)
ADD FOREIGN KEY (JOB_ID)
REFERENCES JOBS(JOB_ID) ON DELETE CASCADE
ADD FOREIGN KEY (DEPARTMENT_ID)
REFERENCES DEPARTMENTS(DEPARTMENT_ID) ON DELETE CASCADE;


ALTER TABLE JOB_HISTORY
ADD PRIMARY KEY (EMPLOYEE_ID, START_DATE)
ADD FOREIGN KEY (JOB_ID)
REFERENCES JOBS(JOB_ID) ON DELETE CASCADE
ADD FOREIGN KEY (DEPARTMENT_ID)
REFERENCES DEPARTMENTS(DEPARTMENT_ID) ON DELETE CASCADE
ADD FOREIGN KEY (EMPLOYEE_ID)
REFERENCES EMPLOYEES(EMPLOYEE_ID) ON DELETE CASCADE;

ALTER TABLE EMPLOYEES
ADD FOREIGN KEY (MANAGER_ID)
REFERENCES EMPLOYEES(EMPLOYEE_ID);





SELECT LAST_NAME || ' ' || SALARY as WYNAGRODZENIE
FROM EMPLOYEES
WHERE (DEPARTMENT_ID=20 OR DEPARTMENT_ID=50) AND (SALARY>=2000 AND SALARY<=7000)
ORDER BY LAST_NAME;

SELECT HIRE_DATE, LAST_NAME, &col
FROM EMPLOYEES
WHERE (SUBSTR(HIRE_DATE,1,2)='05' AND MANAGER_ID IS NOT NULL)
ORDER BY &col;


SELECT FIRST_NAME||' '||LAST_NAME as NAME, SALARY, PHONE_NUMBER
FROM EMPLOYEES
WHERE ((REGEXP_LIKE(FIRST_NAME, '&IN') AND (SUBSTR(LAST_NAME,3,1)='c')))
ORDER BY 1 DESC,2 ASC;

SELECT FIRST_NAME, LAST_NAME ,ROUND( MONTHS_BETWEEN('22/10/19',HIRE_DATE)) AS MIESIACE
, CASE
    WHEN MIESIACE <200 THEN 1
    ELSE 2
END AS XD
FROM EMPLOYEES;

SELECT EMPLOYEES.SALARY
FROM EMPLOYEES
INNER JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE EMPLOYEES.SALARY>5000;
 
SELECT E.LAST_NAME,D.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.JOB_ID
FROM EMPLOYEES E JOIN
    departments D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID JOIN
    LOCATIONS L
    ON L.LOCATION_ID = D.LOCATION_ID
WHERE L.CITY ='Toronto';
    
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME ='Jennifer';

SELECT DEPARTMENT_NAME
FROM DEPARTMENTS 
WHERE DEPARTMENT_ID 
NOT IN (SELECT DEPARTMENT_ID FROM EMPLOYEES);

CREATE TABLE JOB_GRADES AS( SELECT * FROM HR.job_grades);

SELECT E.FIRST_NAME, E.LAST_NAME, E.JOB_ID,E.SALARY,J.GRADE
FROM EMPLOYEES E JOIN
    departments D
    ON E.DEPARTMENT_ID = D.DEPARTMENT_ID JOIN
    JOB_GRADES J
    ON J._ID = D.LOCATION_ID
